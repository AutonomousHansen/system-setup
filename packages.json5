// List of packages to be installed. Key is package name, args are strings to be run
{
  "basic_packages" : [
    "sudo apt-get update",
    "sudo apt-get upgrade",
    "sudo apt-get dist-upgrade",
    "sudo apt-get install -y git \
                             nano \
                             gedit \
                             "
  ],
  "nvidia_setup" : [
    "sudo add-apt-repository ppa:graphics-drivers/ppa -y",
    "sudo apt-get purge nvidia*",
  ],
  "chrome": [
    "wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb",
    "sudo dpkg -i google-chrome-stable_current_amd64.deb",
  ],
  "docker" : [
    "curl -fsSL https://get.docker.com -o get-docker.sh",
    "sudo sh get-docker.sh",
    'sudo curl -L "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose',
    "sudo chmod +x /usr/local/bin/docker-compose"
  ],
  "virtualenvwrapper" : [

  ],
  "virtualenv_setup" : [

  ],
  "ROS" : [

  ],
  "cups_printer" : [
    "sudo systemctl stop cups-browsed.service",
    "sudo systemctl disable cups-browsed.service",
  ],
  "ssh_keys" : [

  ],
  "DRL_UROP" : [
    'sudo apt-get install ros-kinetic-catkin -y',
    'sudo sh -c ',echo ",deb http://packages.ros.org/ros/ubuntu `lsb_release -sc` main" > /etc/apt/sources.list.d/ros-latest.lis',
    'wget http://packages.ros.org/ros.key -O - | sudo apt-key add -',
    'sudo apt-get update',
    'sudo apt-get install python-catkin-tools',
    ' ~/project',
    'mkdir -p knightrider/catkin_ws/src',
    'cd knightrider/catkin_ws/src',
    'git clone --recurse-submodules git@github.com:mit-drl/knightrider-mobility.git',
    'rosdep update',
    'rosdep install --from-paths src --ignore-src -r -y',
    'rosdep update',
    'rosdep install --from-paths src --ignore-src -r -y',
    "sudo add-apt-repository ppa:ubuntu-toolchain-r/test",
    "sudo apt-get update",
    "sudo apt-get install build-essential clang-5.0 lld-5.0 g++-7 cmake ninja-build python python-pip python-dev python3-dev python3-pip libtiff5-dev libjpeg-dev tzdata sed curl wget unzip autoconf libtool",
    "pip2 install --user setuptools nose2",
    "pip3 install --user setuptools nose2",
    "sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/lib/llvm-5.0/bin/clang++ 101",
    "sudo update-alternatives --install /usr/bin/clang clang /usr/lib/llvm-5.0/bin/clang 101",
    "git clone --depth=1 -b 4.19 https://github.com/EpicGames/UnrealEngine.git ~/UnrealEngine_4.19",
    "cd ~/UnrealEngine_4.19",
    "./Setup.sh && ./GenerateProjectFiles.sh && make",
    "git clone git@github.com:mit-drl/carla.git",
    "cd carla",
    "git checkout 0.9.2-nopng",
    "./Update.sh"
  ]

}